import { createAction, props } from '@ngrx/store';

export const toggleColumn = createAction(
  '[Columns] Toggle Column',
  props<{ key: string; isVisible: boolean }>()
);

export const toggleAllColumns = createAction(
  '[Columns] Toggle All Columns',
  props<{ isVisible: boolean }>()
);


import { createReducer, on, Action } from '@ngrx/store';
import * as ColumnsActions from './columns.actions';

export interface ColumnMetaData {
  name: string;
  key: string;
  isVisible: boolean;
}

export type ColumnsState = ColumnMetaData[];

export const initialColumnsState: ColumnsState = [
  { name: 'Volume', key: 'volume', isVisible: true },
  { name: 'PPH', key: 'pph', isVisible: true },
  { name: 'Span', key: 'span', isVisible: true },
  { name: 'Flow/Hr', key: 'flowHr', isVisible: true },
  { name: 'Hours', key: 'hours', isVisible: true },
  { name: 'Staffing', key: 'staffing', isVisible: true },
  { name: 'PD Day', key: 'pdDay', isVisible: true },
  { name: 'Pr Rate', key: 'prRate', isVisible: true },
  { name: 'Smalls', key: 'smalls', isVisible: true },
  { name: 'Irregulars', key: 'irregulars', isVisible: true }
];

const _columnsReducer = createReducer(
  initialColumnsState,
  on(ColumnsActions.toggleColumn, (state, { key, isVisible }) => {
    return state.map(column =>
      column.key === key ? { ...column, isVisible } : column
    );
  }),
  on(ColumnsActions.toggleAllColumns, (state, { isVisible }) => {
    return state.map(column => ({ ...column, isVisible }));
  })
);

export function columnsReducer(state: ColumnsState | undefined, action: Action) {
  return _columnsReducer(state, action);
}


import { Component } from '@angular/core';
import { Store } from '@ngrx/store';
import { Observable } from 'rxjs';
import { ColumnMetaData } from './columns.reducer';
import * as ColumnsActions from './columns.actions';
import { AppState } from './app.state';

@Component({
  selector: 'weekly-summary-column-management',
  templateUrl: './weekly-summary-column-management.component.html',
  styleUrls: ['./weekly-summary-column-management.component.scss']
})
export class WeeklySummaryColumnManagementComponent {
  columns$: Observable<ColumnMetaData[]>;

  constructor(private store: Store<AppState>) {
    this.columns$ = this.store.select(state => state.columns);
  }

  toggleColumn(column: ColumnMetaData) {
    this.store.dispatch(ColumnsActions.toggleColumn({ key: column.key, isVisible: !column.isVisible }));
  }

  toggleAll(isVisible: boolean) {
    this.store.dispatch(ColumnsActions.toggleAllColumns({ isVisible }));
  }
}


<div class="column-management">
  <h3>Manage View</h3>

  <div class="button-row">
    <button class="btn-show-all" (click)="toggleAll(true)">Show All Planned</button>
    <button class="btn-show-none" (click)="toggleAll(false)">Show All Actual</button>
  </div>

  <ul class="column-list">
    <li *ngFor="let column of columns$ | async" class="column-item">
      <label>
        <input
          type="checkbox"
          [checked]="column.isVisible"
          (change)="toggleColumn(column)"
        />
        {{ column.name }}
      </label>
    </li>
  </ul>
</div>


<slide-out>
  <weekly-summary-column-management></weekly-summary-column-management>
</slide-out>

<div class="tableContainer">
  <table>
    <thead>
      <tr>
        <th *ngIf="columnsMap['volume']">Volume</th>
        <th *ngIf="columnsMap['pph']">PPH</th>
        <th *ngIf="columnsMap['span']">Span</th>
        <th *ngIf="columnsMap['flowHr']">Flow/Hr</th>
        <th *ngIf="columnsMap['hours']">Hours</th>
        <th *ngIf="columnsMap['staffing']">Staffing</th>
        <th *ngIf="columnsMap['pdDay']">PD Day</th>
        <th *ngIf="columnsMap['prRate']">Pr Rate</th>
        <th *ngIf="columnsMap['smalls']">Smalls</th>
        <th *ngIf="columnsMap['irregulars']">Irregulars</th>
      </tr>
    </thead>
    <tbody>
      <!-- Example Rows -->
      <tr>
        <td *ngIf="columnsMap['volume']">123</td>
        <td *ngIf="columnsMap['pph']">456</td>
        <td *ngIf="columnsMap['span']">2.5</td>
        <td *ngIf="columnsMap['flowHr']">4.0</td>
        <td *ngIf="columnsMap['hours']">7.5</td>
        <td *ngIf="columnsMap['staffing']">12</td>
        <td *ngIf="columnsMap['pdDay']">2</td>
        <td *ngIf="columnsMap['prRate']">85%</td>
        <td *ngIf="columnsMap['smalls']">20%</td>
        <td *ngIf="columnsMap['irregulars']">5%</td>
      </tr>
    </tbody>
  </table>
</div>


