let updatedOnce = false; // Flag to track if update happened

for (var i = 0; i < currentWorkAreaTypes.length; i++) {
    let type = currentWorkAreaTypes[i];
    if (!updatedOnce && type.workAreaTypeName === action.payload.targetWorkAreaType) {
        let _type = Object.assign({}, type);
        _type[action.payload.path.propertyToUpdate].currentValueEntry = { ...action.payload.uve };
        _type[action.payload.path.propertyToUpdate].lastUpdated = _rightNow;
        currentWorkAreaTypes.splice(i, 1, _type);
        updatedOnce = true;  // Set the flag to true after first update
    }
}


let _updatedValue = Object.assign({}, type[action.payload.path.propertyToUpdate]);
_updatedValue.previousSessionValueEntries.push({ ..._updatedValue.currentValueEntry });
_updatedValue.currentValueEntry = action.payload.uve;
_updatedValue.lastUpdated = _rightNow;
currentWorkAreaTypes.splice(i, 1, _updatedValue);