
public async Task<List<Entities.Scan>> GetFilteredScansAsync(string regexPattern, StopwatchWrapper? sw = null)
{
    // Create the single filter
    var rowFilter = RowFilters.RowKeyRegex(regexPattern);

    var request = new ReadRowsRequest
    {
        TableNameAsTableName = TableName,
        Filter = rowFilter // Apply the single filter directly
    };

    var physicalScansResponse = _bigtableClient.ReadRows(request);
    var physicalScans = new ConcurrentBag<Entities.Scan>();

    await foreach (var row in physicalScansResponse)
    {
        var scan = new Entities.Scan();
        foreach (var cell in row.Chunks)
        {
            // Process each cell and populate the scan entity
            switch (cell.Qualifier.ToStringUtf8())
            {
                case "Belt":
                    scan.Belt = cell.Value.ToStringUtf8();
                    break;
                case "EventTimestamp":
                    scan.EventTimestamp = cell.Value.ToStringUtf8();
                    break;
                case "TrackingNumber":
                    scan.TrackingNumber = cell.Value.ToStringUtf8();
                    break;
                // Add other cases as needed
            }
        }
        physicalScans.Add(scan);
    }

    return physicalScans.ToList();
}
