
  // Combine Observables for Header Cell Count
  headerClass$: Observable<string> = combineLatest([
    this.showHours$,
    this.showTotalHours$,
    this.showDirectHours$,
    this.showIndirectHours$,
  ]).pipe(
    map(([showHours, total, direct, indirect]) => {
      if (!showHours) return 'header-cell-0';
      const count = [total, direct, indirect].filter(Boolean).length;
      return `header-cell-${count}`;
    })
  );

  constructor(private store: Store) {}
}

import { Component } from '@angular/core';
import { Observable, combineLatest, map } from 'rxjs';
import { Store } from '@ngrx/store';
import { WeeklySummaryColumns, WeeklySummaryStaffing, WeeklySummarySmalls, WeeklySummaryIrregulars } from './models';
import { fromWeeklySummaryStore } from './store';

@Component({
  selector: 'app-weekly-summary',
  templateUrl: './weekly-summary.component.html',
})
export class WeeklySummaryComponent {
  // STAFFING
  showStaffing$ = this.store.select(fromWeeklySummaryStore.getColVisibility(WeeklySummaryColumns.Staffing));
  showAssignedStaffing$ = this.store.select(fromWeeklySummaryStore.getSubColVisibility(WeeklySummaryColumns.Staffing, WeeklySummaryStaffing.Assigned));
  showWorkedStaffing$ = this.store.select(fromWeeklySummaryStore.getSubColVisibility(WeeklySummaryColumns.Staffing, WeeklySummaryStaffing.Worked));
  showAbsentStaffing$ = this.store.select(fromWeeklySummaryStore.getSubColVisibility(WeeklySummaryColumns.Staffing, WeeklySummaryStaffing.Absent));
  showLessThanThree$ = this.store.select(fromWeeklySummaryStore.getSubColVisibility(WeeklySummaryColumns.Staffing, WeeklySummaryStaffing.LessThenThree));
  showGreaterThanFive$ = this.store.select(fromWeeklySummaryStore.getSubColVisibility(WeeklySummaryColumns.Staffing, WeeklySummaryStaffing.GreaterThenFive));
  showGreaterThanEight$ = this.store.select(fromWeeklySummaryStore.getSubColVisibility(WeeklySummaryColumns.Staffing, WeeklySummaryStaffing.GreaterThenEight));

  staffingHeaderCount$: Observable<number> = combineLatest([
    this.showAssignedStaffing$,
    this.showWorkedStaffing$,
    this.showAbsentStaffing$,
    this.showLessThanThree$,
    this.showGreaterThanFive$,
    this.showGreaterThanEight$,
  ]).pipe(
    map(subcolumns => subcolumns.filter(Boolean).length)
  );

  // SMALLS
  showSmalls$ = this.store.select(fromWeeklySummaryStore.getColVisibility(WeeklySummaryColumns.Smalls));
  showSmallsPercent$ = this.store.select(fromWeeklySummaryStore.getSubColVisibility(WeeklySummaryColumns.Smalls, WeeklySummarySmalls.SmallsPercent));
  showSmallsVolume$ = this.store.select(fromWeeklySummaryStore.getSubColVisibility(WeeklySummaryColumns.Smalls, WeeklySummarySmalls.SmallsVolume));
  showSmallsPPH$ = this.store.select(fromWeeklySummaryStore.getSubColVisibility(WeeklySummaryColumns.Smalls, WeeklySummarySmalls.SmallsPPH));

  smallsHeaderCount$: Observable<number> = combineLatest([
    this.showSmallsPercent$,
    this.showSmallsVolume$,
    this.showSmallsPPH$,
  ]).pipe(
    map(subcolumns => subcolumns.filter(Boolean).length)
  );

  // IRREGULARS
  showIrregulars$ = this.store.select(fromWeeklySummaryStore.getColVisibility(WeeklySummaryColumns.Irregulars));
  showIrregPercent$ = this.store.select(fromWeeklySummaryStore.getSubColVisibility(WeeklySummaryColumns.Irregulars, WeeklySummaryIrregulars.IrregPercent));
  showIrregVolume$ = this.store.select(fromWeeklySummaryStore.getSubColVisibility(WeeklySummaryColumns.Irregulars, WeeklySummaryIrregulars.IrregVolume));
  showIrregPPH$ = this.store.select(fromWeeklySummaryStore.getSubColVisibility(WeeklySummaryColumns.Irregulars, WeeklySummaryIrregulars.IrregPPH));

  irregularsHeaderCount$: Observable<number> = combineLatest([
    this.showIrregPercent$,
    this.showIrregVolume$,
    this.showIrregPPH$,
  ]).pipe(
    map(subcolumns => subcolumns.filter(Boolean).length)
  );

  constructor(private store: Store) {}
}