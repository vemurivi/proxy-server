case SortOpReportActionType.UPDATE_WORK_AREA: {
    let _rightNow = new Date().toISOString();
    let updatedOnce = false;

    // Clone the current raw work area types
    let currentWorkAreaTypes: WorkAreaType[] = Object.assign([], state.raw_workAreaTypes) as WorkAreaType[];

    // Loop through work area types
    for (var i = 0; i < currentWorkAreaTypes.length; i++) {
        let type = currentWorkAreaTypes[i];

        if (type.workAreaTypeName === action.payload.path.workAreaType) {
            // Nested loop for work areas within the work area type
            for (var j = 0; j < type.workAreas.length; j++) {
                let area = type.workAreas[j];

                if (area.workAreaName === action.payload.path.workArea) {
                    // When you find the work area, clone it and update the necessary values
                    let _area = Object.assign({}, area) as WorkArea;
                    
                    // Push previous session entries and update the current value
                    (_area[action.payload.path.propertyToUpdate] as EditableValue<UserValueEntry>)
                        .previousSessionValueEntries.push(
                            (_area[action.payload.path.propertyToUpdate] as EditableValue<UserValueEntry>).currentValueEntry
                        );
                    (_area[action.payload.path.propertyToUpdate] as EditableValue<UserValueEntry>)
                        .currentValueEntry = action.payload.uve;

                    // Update the lastUpdated values
                    _area.lastUpdated = new Date().toISOString();
                    type.lastUpdated = new Date().toISOString();

                    // Splice the updated area back into the type
                    type.workAreas.splice(j, 1, _area);
                }
            }

            // Splice the updated type back into currentWorkAreaTypes
            currentWorkAreaTypes.splice(i, 1, type);
        }
    }

    return {
        ...state,
        raw_workAreaTypes: currentWorkAreaTypes,
    };
}
